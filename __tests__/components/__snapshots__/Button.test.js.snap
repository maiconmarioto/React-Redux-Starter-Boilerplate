// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render children text 1`] = `
<Button>
  <WithStyles(Button)>
    <Button
      classes={
        Object {
          "colorInherit": "MuiButton-colorInherit-6",
          "disabled": "MuiButton-disabled-11",
          "fab": "MuiButton-fab-12",
          "flatPrimary": "MuiButton-flatPrimary-3",
          "flatSecondary": "MuiButton-flatSecondary-4",
          "focusVisible": "MuiButton-focusVisible-10",
          "fullWidth": "MuiButton-fullWidth-16",
          "label": "MuiButton-label-2",
          "mini": "MuiButton-mini-13",
          "outlined": "MuiButton-outlined-5",
          "raised": "MuiButton-raised-7",
          "raisedPrimary": "MuiButton-raisedPrimary-8",
          "raisedSecondary": "MuiButton-raisedSecondary-9",
          "root": "MuiButton-root-1",
          "sizeLarge": "MuiButton-sizeLarge-15",
          "sizeSmall": "MuiButton-sizeSmall-14",
        }
      }
      color="default"
      component="button"
      disableFocusRipple={false}
      disabled={false}
      fullWidth={false}
      mini={false}
      size="medium"
      type="button"
      variant="flat"
    >
      <WithStyles(ButtonBase)
        className="MuiButton-root-1"
        component="button"
        disabled={false}
        focusRipple={true}
        focusVisibleClassName="MuiButton-focusVisible-10"
        type="button"
      >
        <ButtonBase
          centerRipple={false}
          className="MuiButton-root-1"
          classes={
            Object {
              "disabled": "MuiButtonBase-disabled-18",
              "focusVisible": "MuiButtonBase-focusVisible-19",
              "root": "MuiButtonBase-root-17",
            }
          }
          component="button"
          disableRipple={false}
          disabled={false}
          focusRipple={true}
          focusVisibleClassName="MuiButton-focusVisible-10"
          tabIndex="0"
          type="button"
        >
          <button
            className="MuiButtonBase-root-17 MuiButton-root-1"
            disabled={false}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex="0"
            type="button"
          >
            <span
              className="MuiButton-label-2"
            >
              Save
            </span>
            <WithStyles(TouchRipple)
              center={false}
              innerRef={[Function]}
            >
              <TouchRipple
                center={false}
                classes={
                  Object {
                    "child": "MuiTouchRipple-child-24",
                    "childLeaving": "MuiTouchRipple-childLeaving-25",
                    "childPulsate": "MuiTouchRipple-childPulsate-26",
                    "ripple": "MuiTouchRipple-ripple-21",
                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-23",
                    "rippleVisible": "MuiTouchRipple-rippleVisible-22",
                    "root": "MuiTouchRipple-root-20",
                  }
                }
              >
                <TransitionGroup
                  childFactory={[Function]}
                  className="MuiTouchRipple-root-20"
                  component="span"
                  enter={true}
                  exit={true}
                >
                  <span
                    className="MuiTouchRipple-root-20"
                  />
                </TransitionGroup>
              </TouchRipple>
            </WithStyles(TouchRipple)>
          </button>
        </ButtonBase>
      </WithStyles(ButtonBase)>
    </Button>
  </WithStyles(Button)>
</Button>
`;
